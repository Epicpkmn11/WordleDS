name: Build Wordle DS

on:
  push:
    branches: ["*"]
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: ["*"]
    paths-ignore:
      - 'README.md'
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: skylyrac/blocksds:slim-latest
    name: Build with Docker using BlocksDS
    steps:
      - name: Install Python
        run: sudo apt-get -y install python
      - name: Checkout repo
        uses: actions/checkout@v1
      - name: Build Wordle DS
        run: |
          make

          # Make CIA
          curl -LO https://github.com/ihaveamac/ctr_toolkit/releases/download/make_cia6.4builds/make_cia6.4builds.zip
          unzip -j make_cia6.4builds.zip linux/make_cia
          ./make_cia --srl=WordleDS.dsi

          # Move builds to dir for upload
          mkdir artifacts
          mv *.nds artifacts
          mv *.dsi artifacts
          mv *.cia artifacts
      - name: Publish build to GH Actions
        uses: actions/upload-artifact@v2
        with:
          path: "artifacts/*"
          name: build

  # Only run this for non-PR jobs.
  publish_build:
    runs-on: ubuntu-latest
    name: Upload to release
    if: ${{ success() && startsWith(github.ref, 'refs/tags') }}
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - name: 
        if: 
        run: |
          ID=$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)

          for file in ${{ github.workspace }}/build/*; do
            AUTH_HEADER="Authorization: token ${{ secrets.GITHUB_TOKEN }}"
            CONTENT_LENGTH="Content-Length: $(stat -c%s $file)"
            CONTENT_TYPE="Content-Type: application/7z-x-compressed"
            UPLOAD_URL="https://uploads.github.com/repos/${{ github.repository }}/releases/$ID/assets?name=$(basename $file)"

            curl -XPOST -H "$AUTH_HEADER" -H "$CONTENT_LENGTH" -H "$CONTENT_TYPE" --upload-file "$file" "$UPLOAD_URL"
          done
